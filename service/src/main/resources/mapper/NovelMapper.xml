<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noveltool.service.mapper.NovelMapper">
    
    <!-- 结果映射 -->
    <resultMap id="NovelResultMap" type="com.noveltool.common.entity.Novel">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="author" column="author"/>
        <result property="category" column="category"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    
    <!-- 表名 -->
    <sql id="tableName">novels</sql>
    
    <!-- 基础字段 -->
    <sql id="baseColumnList">
        id, title, content, author, category, create_time, update_time
    </sql>
    
    <!-- 查询所有小说 -->
    <select id="findAll" resultMap="NovelResultMap">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="tableName"/>
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据ID查询小说 -->
    <select id="findById" resultMap="NovelResultMap">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="tableName"/>
        WHERE id = #{id}
    </select>
    
    <!-- 插入小说 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO
        <include refid="tableName"/>
        (title, content, author, category, create_time, update_time)
        VALUES
        (#{title}, #{content}, #{author}, #{category}, #{createTime}, #{updateTime})
    </insert>
    
    <!-- 更新小说 -->
    <update id="update">
        UPDATE
        <include refid="tableName"/>
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="author != null">
                author = #{author},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 根据ID删除小说 -->
    <delete id="deleteById">
        DELETE FROM
        <include refid="tableName"/>
        WHERE id = #{id}
    </delete>
    
    <!-- 检查小说是否存在 -->
    <select id="existsById" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM
        <include refid="tableName"/>
        WHERE id = #{id}
    </select>
    
    <!-- 根据标题模糊查询 -->
    <select id="findByTitleContaining" resultMap="NovelResultMap">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="tableName"/>
        WHERE title LIKE CONCAT('%', #{title}, '%')
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据作者查询 -->
    <select id="findByAuthor" resultMap="NovelResultMap">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="tableName"/>
        WHERE author = #{author}
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据分类查询 -->
    <select id="findByCategory" resultMap="NovelResultMap">
        SELECT
        <include refid="baseColumnList"/>
        FROM
        <include refid="tableName"/>
        WHERE category = #{category}
        ORDER BY create_time DESC
    </select>
    
</mapper>
